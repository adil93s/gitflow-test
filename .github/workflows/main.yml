name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - develop
      - release/*
      - feature/*
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install Dependencies
        run: |
          npm install

      - name: Build
        run: |
          npm run build

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Tests
        run: |

  package:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Package
        run: |
          npm pack

      - name: Version handling
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          VERSION=$(node -p "require('./package.json').version")

          if [[ "$BRANCH_NAME" == "master" ]]; then
            npm version minor
          elif [[ "$BRANCH_NAME" == "develop" ]]; then
            npm version prerelease --preid=dev
          elif [[ "$BRANCH_NAME" =~ ^feature/ ]]; then
            echo "Feature branch $BRANCH_NAME was pushed. Version remains at $VERSION."
            exit 0
          fi

          git push origin $BRANCH_NAME

  deploy_release:
    if: github.event_name == 'workflow_dispatch'
    needs: package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Release
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          VERSION=$(node -p "require('./package.json').version")

          npm version patch
          git checkout -b release-${VERSION} 2>/dev/null || git checkout release-${VERSION}
          git push origin release-${VERSION}
